var http = require('http');
var path = require('path');
var request = require('supertest');
var should = require('should');
var send = require('../lib/static.js').send

// test server
var fixtures = 'test/fixtures';
var app = http.createServer(function(req, res) {
	function error(err) {
		res.statusCode = err.status;
		res.end(http.STATUS_CODES[err.status]);
	}

	function redirect() {
		res.statusCode = 301;
		res.setHeader('Location', req.url + '/');
		res.end('Redirecting to ' + req.url + '/');
	}

	send(req, req.url, {
		root: fixtures
	})
		.on('error', error)
		.on('directory', redirect)
		.pipe(res);
});


UTest({
	$config: {
		errorableCallbacks: true
	},
	'request virtual file': (function(){
		io
			.File
			.getFactory()
			.registerHandler(/\.txt$/, Class({
				Base: io.File,
				exists: function(){
					return true;
				},
				readAsync: function(){
					var dfr = new Class.Deferred;
					return dfr.resolve('name:' + this.uri.getName());
				}
			}));
		
		
		return {
			'read': function(done){
				request(app)
					.get('/foo.txt')
					.expect('Content-Length', 'name:foo'.length)
					.expect(200, 'name:foo', done)
			},
			
		};
	}())
});
